import React, { useState, useEffect } from "react";
import LandingPage from "./components/LandingPage";
import FileUpload from "./components/FileUpload";
import Lobby from "./components/Lobby";
import GamePlay from "./components/GamePlay";
import JoinGame from "./components/JoinGame";
import './styles/shared/ButtonStyles.css';
import './styles/Gradient.css';
import Particles from 'particlesjs';

function App() {
    const [currentPage, setCurrentPage] = useState('landing');
    const [gameData, setGameData] = useState(null);
    const [questions, setQuestions] = useState([]);
    const [username, setUsername] = useState('');

    useEffect(() => {
        // Initialize Particles.js on app load
        Particles.init({
            selector: '.background',
            maxParticles: 100,
            color: ['#ffffff', '#cccccc', '#999999'], // Sleek white/grey colors
            connectParticles: true,
            speed: 0.1,
        });
    }, []);

    const handleStart = (username, action) => {
        setUsername(username);
        setCurrentPage(action === 'create' ? 'upload' : 'join');
    };

    const startGame = async () => {
        if (!gameData?.gameCode) return;

        try {
            // Get questions (they should already be generated by host)
            const response = await fetch("http://localhost:5000/api/questions");
            const data = await response.json();
            
            if (data.questions) {
                console.log('Setting questions and changing page to game');
                setQuestions(data.questions);
                setCurrentPage('game');
            } else {
                throw new Error("No questions found in response");
            }
        } catch (error) {
            console.error("Error starting the game:", error);
            alert("An error occurred while starting the game. Please try again.");
        }
    };

    const handleLeaveLobby = () => {
        // Clear game data when leaving
        setGameData(null);
        setCurrentPage(gameData?.isHost ? 'upload' : 'join');
    };

    // Render the appropriate component based on currentPage
    return (
        <div>
            {/* Background for Particles.js */}
            <canvas className="background"></canvas>

            {/* Render the appropriate page */}
            {(() => {
                switch (currentPage) {
                    case 'landing':
                        return <LandingPage onStart={handleStart} />;
                        
                    case 'upload':
                        return (
                            <FileUpload 
                                username={username}
                                setGameData={(data) => {
                                    setGameData({...data, playerName: username});
                                    setCurrentPage('lobby');
                                }}
                                onBack={() => setCurrentPage('landing')}
                            />
                        );
                        
                    case 'lobby':
                        return gameData && (
                            <Lobby 
                                gameData={gameData}
                                startGame={startGame}
                                onBack={handleLeaveLobby}
                            />
                        );
                        
                    case 'game':
                        return (
                            <GamePlay 
                                questions={questions} 
                                onFinish={() => setCurrentPage('lobby')}
                                gameData={gameData}
                            />
                        );
                        
                    case 'join':
                        return <JoinGame 
                            username={username}
                            onJoin={(gameData) => {
                                setGameData(gameData);
                                setCurrentPage('lobby');
                            }}
                            onBack={() => setCurrentPage('landing')}
                        />;
                        
                    default:
                        return <LandingPage onStart={handleStart} />;
                }
            })()}
        </div>
    );
}

export default App;
